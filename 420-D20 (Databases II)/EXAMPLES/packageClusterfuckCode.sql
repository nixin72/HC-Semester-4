/*
  PLSQL PACKAGES
  PLSQL SUPPORTS FUNCTION/PROCEDURE OVERLOADING

*/

CREATE OR REPLACE PACKAGE BODY CLASS_MANAGEMENT_PACKAGE 
  IS FUNCTION FIND_ROOM_PF (
    PV_DAY_I    IU_CRSSECTION.DAY%TYPE,
    PV_STARTTIME_I IU_CRSSECTION.STARTTIME%TYPE,
    PV_ENDTIME_I IU_CRSSECTION.ENDTIME%TYPE,
    PV_MAXCOUNT_I IU_CRSSECTION.MAXCOUNT%TYPE
  ) RETURN IU_CRSSECTION.ROOMID%TYPE
  IS
    LV_ROOMID IU_CRSSECTION.ROOMID%TYPE;
    
    CURSOR LCUR_AVAILABLE_ROOM
    IS
      SELECT ROOMID
        FROM IU_LOCATION LEFT JOIN IU_CRSSECTION USING (ROOMID)
        WHERE CAPACITY >= PV_MAXCOUNT_I
          AND NOT (DAY = PV_DAY_I
                   AND STARTTIME = PV_STARTTIME_I
                   AND ENDTIME = PV_ENDTIME_I
                   );
  BEGIN 
    OPEN LCUR_AVAILABLE_ROOM;
    FETCH LCUR_AVAILABLE_ROOM INTO LV_ROOMID;
    
    IF LCUR_AVAILABLE_ROOM%NOTFOUND THEN
      LV_ROOMID := 0;
    END IF;
    
    RETURN LV_ROOMID;
  END FIND_ROOM_PF;
END;



CREATE OR REPLACE PACKAGE EMPADMIN AS
  TYPE EMPRECTYPE IS RECORD (EMPID NUMBER, SAL NUMBER);
  CURSOR DESCSALARY RETURN EMPRECTYPE;
  INVALID SALARY EXCEPTION;
  
  FUNCTION HIREEMPLOYEES (LASTNAME VARCHAR2, FIRSTNAME VARCHAR2, 
    EMAIL VARCHAR2, PHONE VARCHAR2, JOBID VARCHAR2, COMMISSIONPCT NUMBER, 
    MANAGERID NUMBER, DEPARTMENTID NUMBER
  ) RETURN NUMBER;
  
  PROCEDURE FIREEMPLOYEE     (EMPID NUMBER);
  PROCEDURE FIREEMPLOYEE     (EMPEMAIL VARCHAR2);
  PROCEDURE RAISESALARY      (EMPID NUMBER, AMOUNT NUMBER);
  FUNCTION  NTHHIGHESTSALARY (N NUMBER) RETURN EMPRECTYPE;
END EMPADMIN;



CREATE OR REPLACE PACKAGE BODY EMPADMIN AS
  NUMBERHIRED NUMBER;
  
  CURSOR DESCSALARY RETURN EMPRECTYPE IS 
    SELECT EMPLOYEE_ID, SALARY FROM EMPLOYEES ORDER BY SALARY;
    
  FUNCTION HIREEMPLOYEE (LASTNAME VARCHAR2, FIRSTNAME VARCHAR2, EMAIL VARCHAR2, 
    PHONE VARCHAR2, JOBID VARCHAR2, SALARY NUMBER, COMMISSIONPCT NUMBER, 
    MANAGERID NUMBER, DEPARTMENTID NUMBER
  ) RETURN NUMBER IS NEWEMPID NUMBER;
  BEGIN 
    SELECT EMPLOYEES_SEQ.NEXTVAL INTO NEWEMPID FROM DUAL;
    
    INSERT INTO EMPLOYEES 
    VALUES (NEWEMPID, LASTNAME, FIRSTNAME, PHONE, SYSDATE, 
      JOBID, SALARY, COMMISSIONPCT, MANAGERID, DEPARTMENTID
    );
    NUMBERHIRED := NUMBERHIRED + 1;
    DBMS_OUTPUT.PUT_LINE('THE NUMBER OF EMPLOYEES HIRED IS ' 
      || TO_CHAR(NUMBERHIRED));
    
    RETURN NEWEMPID;
    
    PROCEDURE FIREEMPLOYEE (EMPID NUMBER) IS
      BEGIN 
        DELETE FROM EMPLOYEES WHERE EMPLOYEEID = EMPID;
    END FIREEMPLOYEE;
    PROCEDURE FIREEMPLOYEE (EMPEMAIL VARCHAR2) IS
      BEGIN 
    


CREATE OR REPLACE PROCEDURE CHANGETIMEPP(
  PVCSIDI           IU_CRSSECTION.CSID%TYPE, 
  PVDAYI            IU_CRSSECTION.DAY%TYPE,
  PVSTARTTIMEI      IU_CRSSECTION.STARTTIME%TYPE,
  PVENDTIMEI        IU_CRSSECTION.ENDTIME%TYPE,
  PVMESSAGEO    OUT VARCHAR2
);

FUNCTION FINDROOMPF (
  PVDAYI    IU_CRSSECTION.DAY%TYPE,
  PVSTRTTIMEI IU_CRSSECTION.STARTTIME%TYPE,
  PVENDTIMEI  IU_CRSSECTION.ENDTIME%TYPE,
  PVMAXCOUNTI IU_CRSSECTION.MAXCOUNT%TYPE
)
RETURN IU_CRSSECTION.ROOMID%TYPE;


CREATE PACKAGE EMPSTUFF AS 
  CURSOR C1 RETURN EMPLOYEES%ROWTYPE;
END EMPSTUFF;

CREATE PACKAGE BODY EMPSTUFF AS
  CURSOR C1 RETURN EMPLOYEES%ROWTYPE IS
    SELECT * FROM EMPLOYEES WHERE SALARY > 2500;
END EMPSTUFF;

